Plan de Continuité d’Activité (PCA/PCRA) 
1. Présentation du projet 
Contexte 
Mangathèque est une application web développée avec Symfony permettant aux 
utilisateurs de consulter et gérer une bibliothèque de mangas en ligne. Le service est 
hébergé sur Render.com avec une base PostgreSQL 
des images. 
Objectifs du PCA/PCRA 
● Assurer la continuité du service en cas d’incident 
● Protéger les données utilisateurs et les contenus 
● Minimiser les temps d’arrêt 
● Définir des procédures de reprise claires 
Indicateurs cibles 
● Temps de rétablissement maximal : 4 heures 
● Perte de données maximale : 24 heures 
● Objectif de disponibilité : 99 % (~7h d’arrêt/mois tolérés) 
2. Architecture et composants 
Principaux composants 
● Utilisateurs → Render.com → PostgreSQL 
● Stockage des images : ImgBB 
● Code source : GitHub 
Éléments critiques 
Composant Importance Localisation Impact si perdu 
Code source Critique GitHub Impossible de 
corriger ou déployer 
Base de données Critique Render PostgreSQL Perte de comptes et 
données utilisateurs 
Images uploadées Importante ImgBB Visuels manquants 
Configuration Importante Variables Render Impossible de 
redéployer 
 
3. Principaux risques 
 
Risque Probabilité Gravité Cause possible 
Panne Render Moyenne Élevée Problème chez 
l’hébergeur 
Erreur de code Élevée Moyenne Bug en production 
Perte de base de 
données 
Faible Très élevée Corruption ou 
mauvaise 
manipulation 
Perte d’images Faible Moyenne Défaillance du 
stockage cloud 
Piratage / attaque Faible Élevée Faille de sécurité 
Impacts estimés 
● Panne Render : indisponibilité 2–6h 
 
● Bug critique : fonctionnalité cassée 1–3h 
 
● Perte BDD : restauration partielle 4–8h 
 
● Perte images : contenu manquant 2–4h 
 
 
 
4. Sauvegardes 
4.1 Code source 
● Sauvegarde : GitHub (push à chaque modification) 
● Restauration : clone + redéploiement 
4.2 Base de données 
● Backup quotidien automatique Render (7 jours) 
● Export manuel hebdomadaire via pg_dump 
● Stockage local et cloud personnel 
● Test mensuel de restauration 
4.3 Images 
● Stockage principal : ImgBB (hébergement d'images) 
● URLs directes stockées en base de données
● Synchronisation mensuelle vers Google Drive via rclone 
4.4 Configuration 
● Export des variables d’environnement dans un fichier chiffré 
● Documentation dans README.md 
● Stockage des secrets via un gestionnaire sécurisé 
5. Procédures de restauration 
Bug applicatif (30 min – 2h) 
● Analyser les logs Render 
● Reproduire le bug en local 
● Correction rapide ou rollback 
● Redéploiement via GitHub 
Perte base de données (1–3h) 
● Restauration via backup Render 
● Vérification connexion et données 
Perte images (1–4h) 
● Vérification de l'accessibilité des URLs ImgBB
● Restauration depuis Google Drive si nécessaire
● Nettoyage du cache Render 
● Vérification affichage 
Perte totale (4–8h) 
● Recréer l’infrastructure Render 
● Importer base et images 
● Redéployer l’application et reconfigurer 
6. Monitoring et alertes 
● UptimeRobot : surveillance toutes les 5 minutes 
● Logs Render : surveillance des erreurs 
● Google Analytics : suivi trafic 
● Tests manuels hebdomadaires 
Alertes 
● Site inaccessible → email UptimeRobot 
● Erreurs serveur → logs Render 
● Backup échoué → notification Render 
Réponse 
● Vérifier gravité 
● Identifier cause 
● Suivre les procédures définies 
● Informer les utilisateurs si besoin 
7. Tests et validation 
Test 
Restauration BDD 
Fréquence 
Mensuel 
Durée 
~30 min 
Objectif 
Vérifier validité des 
backups 
Sauvegarde images Mensuel 
Simulation panne 
Mise à jour doc 
Semestrie 
Trimestriel 
~15 min 
~2h 
~1h 
Contrôler 
synchronisation 
Tester la procédure 
complète 
Garder 
documentation à 
jour 
8. Communication 
En cas d’incident majeur (> 2h) 
● Page d’accueil, réseaux sociaux, email 
Message type 
Incident technique en cours – Temps estimé de reprise : [XX]h 
⚠
 ✅
 Problème résolu – Incident de [XX] minutes, données sauvegardées. 
9. Coûts et budget 
Poste 
Render.com 
Render & GitHub 
Montant 
0–25€/mois 
0€ 
Monitoring 
Budget d’urgence 
● Render Pro : ~25€/mois 
● Stockage cloud : 5–10€/mois 
● Domaine backup : 10€/an 
Optimisations 
● VPS moins cher 
● AWS Free Tier pour backups 
● Alternatives gratuites pour images (ImgBB déjà utilisé) 
0€ 
10. Améliorations prévues 
Court terme 
● Script automatique de sauvegarde 
● Environnement local complet 
● Documentation pour utilisateurs 
Long terme 
● Architecture plus robuste 
● Cache Redis 
● Monitoring avancé