name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mangatheque_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pdo_pgsql, xdebug
        tools: composer:v2
        coverage: xdebug
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
    
    - name: Create uploads directory
      run: |
        mkdir -p public/uploads/covers
        chmod 755 public/uploads/covers
    
    - name: Create test environment
      run: |
        echo "APP_ENV=test" > .env.test.local
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/mangatheque_db?serverVersion=16&charset=utf8" >> .env.test.local
        echo "APP_SECRET=d9cd28f768dc8c4271d0ed2f52f51244" >> .env.test.local
        echo "MAILER_DSN=null://null" >> .env.test.local
        echo "SYMFONY_DEPRECATIONS_HELPER=weak" >> .env.test.local
        echo "MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0" >> .env.test.local
    
    - name: Create database
      run: |
        php bin/console doctrine:migrations:migrate --env=test --no-interaction
    
    - name: Run tests
      run: php bin/phpunit --coverage-clover=coverage.xml --stop-on-failure=false
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true
    
    - name: Run PHPStan
      run: vendor/bin/phpstan analyse src tests --level=8
    
    - name: Run PHP CS Fixer
      run: vendor/bin/php-cs-fixer fix --dry-run --diff
    
    - name: Run Composer audit
      run: composer audit
    
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render
      run: |
        echo "Deployment to Render.com triggered"
        # Render.com se charge automatiquement du d√©ploiement
        # via webhook GitHub 