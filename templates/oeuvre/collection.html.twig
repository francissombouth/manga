{% extends 'base.html.twig' %}

{% block title %}Catalogue - MangaTh√®que{% endblock %}

{% block stylesheets %}
<style>
/* Am√©lioration du style du select des genres */
select[name="tag"] {
    background: var(--surface) !important;
    color: var(--text-primary) !important;
    border: 2px solid var(--border-color) !important;
    border-radius: 10px !important;
    padding: 0.8rem 1rem !important;
    font-size: 1rem !important;
    appearance: none !important;
    background-image: url('data:image/svg+xml;utf8,<svg fill="%23666" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/></svg>') !important;
    background-repeat: no-repeat !important;
    background-position: right 0.7rem center !important;
    background-size: 1.2rem !important;
    padding-right: 2.5rem !important;
    cursor: pointer !important;
    transition: all 0.3s ease !important;
}

select[name="tag"]:focus {
    outline: none !important;
    border-color: var(--accent-primary) !important;
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1) !important;
}

select[name="tag"]:hover {
    border-color: var(--accent-primary) !important;
}

/* Style des options du select */
select[name="tag"] option {
    background: var(--bg-primary) !important;
    color: var(--text-primary) !important;
    padding: 0.5rem !important;
    font-size: 1rem !important;
}

/* Style pour l'option s√©lectionn√©e */
select[name="tag"] option:checked {
    background: var(--bg-primary) !important;
    color: white !important;
}

/* Style pour les options au survol (certains navigateurs) */
select[name="tag"] option:hover {
    background: var(--accent-primary) !important;
    color: white !important;
}

/* Am√©lioration pour Firefox */
@-moz-document url-prefix() {
    select[name="tag"] {
        background-color: var(--surface) !important;
        color: var(--text-primary) !important;
    }
    
    select[name="tag"] option {
        background-color: var(--surface) !important;
        color: var(--text-primary) !important;
    }
    
    select[name="tag"] option:checked {
        background-color: var(--accent-primary) !important;
        color: white !important;
    }
}

/* Am√©lioration pour Safari */
@media screen and (-webkit-min-device-pixel-ratio: 0) {
    select[name="tag"] {
        background-color: var(--surface) !important;
        color: var(--text-primary) !important;
    }
}

/* Styles pour le bouton favori */
.btn-favorite {
    background: rgba(225, 29, 72, 0.1);
    border: 2px solid rgba(225, 29, 72, 0.3);
    color: #e11d48;
    padding: 0.5rem;
    border-radius: 50%;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 40px;
    height: 40px;
    font-size: 1.2rem;
}

.btn-favorite:hover {
    background: #e11d48;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(225, 29, 72, 0.4);
}

.btn-favorite.favorited {
    background: #e11d48;
    color: white;
    border-color: #e11d48;
}

.btn-favorite.favorited:hover {
    background: #be185d;
    border-color: #be185d;
}

/* Ajustement de la disposition des actions */
.manga-actions {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    justify-content: space-between;
}

.btn-read {
    flex: 1;
}

.manga-card {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
}
.manga-card-link {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: inherit;
}
.manga-cover-container {
    position: relative;
}
.coeur-favori {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 2;
    background: rgba(255,255,255,0.9);
    border-radius: 50%;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    transition: box-shadow 0.2s;
}
.coeur-favori.favorited {
    color: #e11d48;
}
.coeur-favori:not(.favorited) {
    color: #aaa;
}
.coeur-favori:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.15);
}

.manga-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 2rem;
}
@media (max-width: 1200px) {
  .manga-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 700px) {
  .manga-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  .sidebar {
    display: none;
  }
  .main-container {
    flex-direction: column;
  }
}
.manga-card {
  min-width: 0;
  max-width: 100%;
}
.manga-title, .manga-author, .manga-meta {
  word-break: break-word;
}
</style>
{% endblock %}

{% block body %}
<div class="main-container">
    <!-- Contenu principal -->
    <main>
        <!-- Header du catalogue -->
        <div class="collection-header">
            <h1 class="collection-title">üî• Catalogue des Mangas</h1>
            <p class="collection-subtitle">D√©couvrez notre collection exceptionnelle de mangas</p>
            
            <!-- Barre de recherche par genres -->
            <div style="margin: 2rem 0; padding: 2rem; background: var(--card-bg); border-radius: 15px; box-shadow: var(--shadow-lg);">
                <h3 style="color: var(--text-primary); margin-bottom: 1rem; font-size: 1.1rem;">üîç Rechercher et filtrer</h3>
                
                <form method="get" style="display: flex; gap: 1rem; align-items: center; flex-wrap: wrap;">
                    <!-- Recherche textuelle -->
                    <div style="flex: 1; min-width: min(250px, 100vw);">
                        <input type="text" name="search" value="{{ app.request.get('search') }}" 
                               placeholder="Rechercher par titre, auteur ou genre..." 
                               style="width: 100%; background: var(--surface); color: var(--text-primary); border: 2px solid var(--border-color); border-radius: 10px; padding: 0.8rem 1rem; font-size: 1rem;">
                    </div>
                    
                    <!-- Filtre par genre -->
                    <div style="min-width: min(200px, 40vw);">
                        <select name="tag">
                            <option value="">Tous les genres</option>
                            {% for tag in allTags|default([]) %}
                            <option value="{{ tag.id }}" {% if app.request.get('tag') == tag.id ~ '' %}selected{% endif %}>
                                {{ tag.nom }}
                            </option>
                            {% endfor %}
                        </select>
                    </div>
                    
                    <!-- Boutons d'action -->
                    <div style="display: flex; gap: 0.5rem;">
                        <button type="submit" style="background: var(--gradient-primary); color: white; padding: 0.8rem 1.5rem; border: none; border-radius: 10px; font-size: 1rem; font-weight: 600; cursor: pointer; transition: all 0.3s ease;">
                            üîç Rechercher
                        </button>
                        {% if app.request.get('search') or app.request.get('tag') %}
                        <a href="{{ path('app_oeuvre_list') }}" style="background: rgba(225, 29, 72, 0.1); color: #e11d48; padding: 0.8rem 1.5rem; border-radius: 10px; text-decoration: none; font-size: 1rem; font-weight: 600; border: 1px solid rgba(225, 29, 72, 0.3); display: flex; align-items: center;">
                            ‚úñ Effacer
                        </a>
                        {% endif %}
                    </div>
                </form>
                
                <!-- Affichage des r√©sultats de recherche -->
                {% if app.request.get('search') or app.request.get('tag') %}
                <div style="margin-top: 1rem; padding: 1rem; background: rgba(59, 130, 246, 0.1); border: 1px solid rgba(59, 130, 246, 0.3); border-radius: 10px; color: var(--text-primary);">
                    <strong>R√©sultats de recherche :</strong>
                    {% if app.request.get('search') %}
                        "{{ app.request.get('search') }}"
                    {% endif %}
                    {% if app.request.get('tag') and selectedTag %}
                        {% if app.request.get('search') %} ‚Ä¢ {% endif %}Genre : {{ selectedTag.nom }}
                    {% endif %}
                    ‚Ä¢ {{ totalOeuvres }} ≈ìuvre(s) trouv√©e(s)
                </div>
                {% endif %}
            </div>
            
            <div class="collection-stats">
                <div class="stat-item">
                    <span class="stat-number">{{ totalOeuvres }}</span>
                    <span class="stat-label">Mangas</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">{{ totalChapitres }}</span>
                    <span class="stat-label">Chapitres</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number">{{ totalAuteurs }}</span>
                    <span class="stat-label">Auteurs</span>
                </div>
            </div>
        </div>

        <!-- Message de filtre actif -->
        {% if selectedTag %}
        <div style="margin: 2rem 0; padding: 1.5rem; background: linear-gradient(135deg, #e11d48, #be185d); border-radius: 15px; color: white; box-shadow: var(--shadow-lg);">
            <h3 style="margin: 0 0 0.5rem 0; font-size: 1.2rem; font-weight: 700;">üé≠ Filtr√© par genre : {{ selectedTag.nom }}</h3>
            <p style="margin: 0; opacity: 0.9;">{{ totalOeuvres }} manga(s) trouv√©(s) avec ce genre</p>
        </div>
        {% endif %}

        <!-- Section Popular Today -->
        <section class="section">
            <div class="section-header">
                <h2 class="section-title">
                    {% if selectedTag %}
                        üé≠ Mangas avec "{{ selectedTag.nom }}"
                    {% else %}
                        üî• Popular Today
                    {% endif %}
                </h2>
                {% if not selectedTag %}
                <a href="#" class="section-link">VIEW ALL</a>
                {% endif %}
            </div>

            {% if oeuvres is not empty %}
                <div class="manga-grid">
                    {% for oeuvre in oeuvres %}
                        <div class="manga-card">
                                <!-- Couverture sans proxy -->
                                <div class="manga-cover-container">
                                    {% if oeuvre.couverture %}
                                        <img src="{{ oeuvre.couverture }}" 
                                             alt="{{ oeuvre.titre }}" 
                                             class="manga-cover"
                                             loading="lazy">
                                    {% else %}
                                        <div class="manga-cover" style="background: linear-gradient(45deg, #374151, #4b5563); display: flex; align-items: center; justify-content: center; color: #9ca3af; font-size: 3rem;">
                                            üìñ
                                        </div>
                                    {% endif %}
                                    <!-- C≈ìur favori en haut √† droite -->
                                    {% if is_granted('ROLE_USER') %}
                                    <button 
                                        class="btn-favorite coeur-favori{% if oeuvreIsFavorite is defined and oeuvreIsFavorite[oeuvre.id] %} favorited{% endif %}"
                                        onclick="event.stopPropagation(); event.preventDefault(); toggleFavorite({{ oeuvre.id }}, this)"
                                        data-oeuvre-id="{{ oeuvre.id }}"
                                        title="{% if oeuvreIsFavorite is defined and oeuvreIsFavorite[oeuvre.id] %}Retirer des favoris{% else %}Ajouter aux favoris{% endif %}"
                                    >
                                        <span class="favorite-icon" id="favorite-icon-{{ oeuvre.id }}">{% if oeuvreIsFavorite is defined and oeuvreIsFavorite[oeuvre.id] %}‚ù§Ô∏è{% else %}ü§ç{% endif %}</span>
                                    </button>
                                    {% endif %}
                                    {% set latestChapter = oeuvre.chapitres|first %}
                                    {% if latestChapter and latestChapter.createdAt > ("now"|date_modify('-2 days')) %}
                                        <div class="new-badge">NEW</div>
                                    {% endif %}
                                </div>
                                <div class="manga-info">
                                <a href="{{ path('app_oeuvre_show', {'id': oeuvre.id}) }}" class="manga-card-link">
                                    <h3 class="manga-title">{{ oeuvre.titre }}</h3>
                                    <p class="manga-author">
                                        {% if oeuvre.auteur %}
                                            {{ oeuvre.auteur.nom }}
                                        {% else %}
                                            Auteur inconnu
                                        {% endif %}
                                    </p>
                                    <div class="manga-meta">
                                        <span class="manga-type">{{ oeuvre.type|default('MANGA') }}</span>
                                        <span class="chapters-count">{{ oeuvre.chapitres|length }} ch.</span>
                                    </div>
                                </a>
                                    {% if oeuvre.tags|length > 0 %}
                                <div class="manga-genres">
                                        {% for tag in oeuvre.tags|slice(0, 3) %}
                                    <a href="{{ path('app_oeuvre_list', {tag: tag.id}) }}" class="manga-genre-badge">
                                            {{ tag.nom }}
                                        </a>
                                        {% endfor %}
                                        {% if oeuvre.tags|length > 3 %}
                                    <span class="manga-genres-count" style="grid-column: 2; grid-row: 2;">+{{ oeuvre.tags|length - 3 }}</span>
                                    {% endif %}
                                </div>
                                {% endif %}
                            </div>
                        </div>
                    {% endfor %}
                </div>
            {% else %}
                <div class="empty-state">
                    <h3>Aucun manga trouv√©</h3>
                    <p>Il semble qu'il n'y ait aucun manga dans votre collection pour le moment.</p>
                    <a href="{{ path('app_home') }}" class="btn-primary">
                        üîç Explorer le catalogue
                    </a>
                </div>
            {% endif %}
        </section>
    </main>

    <!-- Sidebar -->
    <aside class="sidebar">
        <div class="sidebar-section">
            <h3 class="sidebar-title">
                üìà TRENDING THIS WEEK
            </h3>
            <ul class="trending-list">
                {% set trendingMangas = oeuvres|slice(0, 5) %}
                {% for oeuvre in trendingMangas %}
                    <li class="trending-item">
                        <div class="trending-rank">{{ loop.index }}</div>
                        <div class="trending-info">
                            <div class="trending-title">{{ oeuvre.titre }}</div>
                            <div class="trending-chapters">{{ oeuvre.chapitres|length }} chapters</div>
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>

        <!-- Section des statistiques -->
        <div class="sidebar-section">
            <h3 class="sidebar-title">
                üìä Statistiques
            </h3>
            <div style="display: flex; flex-direction: column; gap: 0.5rem;">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <span style="color: var(--text-secondary); font-size: 0.9rem;">Mangas</span>
                    <span style="color: var(--accent-purple); font-weight: 600;">{{ totalOeuvres }}</span>
                </div>
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <span style="color: var(--text-secondary); font-size: 0.9rem;">Chapitres</span>
                    <span style="color: var(--accent-purple); font-weight: 600;">{{ totalChapitres }}</span>
                </div>
            </div>
        </div>

        <!-- Section des tags populaires -->
        <div class="sidebar-section">
            <h3 class="sidebar-title">
                üé≠ Genres Populaires
            </h3>
            <div style="display: flex; flex-wrap: wrap; gap: 0.5rem;">
                {% for tag in popularTags|default([])|slice(0, 8) %}
                <a href="{{ path('app_oeuvre_list', {tag: tag.id}) }}" 
                   style="background: linear-gradient(135deg, #e11d48, #be185d); color: white; padding: 0.3rem 0.8rem; border-radius: 12px; font-size: 0.7rem; font-weight: 600; text-decoration: none; transition: all 0.3s ease; display: inline-flex; align-items: center; gap: 0.2rem;"
                   onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 4px 15px rgba(225, 29, 72, 0.4)'"
                   onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'">
                    {{ tag.nom }}
                </a>
                {% else %}
                <p style="color: var(--text-secondary); font-size: 0.8rem; font-style: italic;">Aucun genre disponible</p>
                {% endfor %}
            </div>
        </div>
    </aside>
</div>

<script>
// V√©rifier l'√©tat des favoris au chargement de la page
document.addEventListener('DOMContentLoaded', function() {
    const favoriteButtons = document.querySelectorAll('.btn-favorite');
    favoriteButtons.forEach(button => {
        const oeuvreId = button.getAttribute('data-oeuvre-id');
        checkFavoriteStatus(oeuvreId);
    });
});

function checkFavoriteStatus(oeuvreId) {
    fetch(`/collections/verifier/${oeuvreId}`)
        .then(response => response.json())
        .then(data => {
            updateFavoriteButton(oeuvreId, data.isFavorite);
        })
        .catch(error => {
            console.error('Erreur lors de la v√©rification des favoris:', error);
        });
}

function toggleFavorite(oeuvreId, button) {
    console.log(`üîÑ Toggle favori pour l'≈ìuvre ${oeuvreId}`);
    
    fetch(`/collections/toggle/${oeuvreId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        console.log('üì° R√©ponse API:', data);
        
        if (data.success) {
            console.log(`‚úÖ Succ√®s: ${data.message}, isFavorite: ${data.isFavorite}`);
            updateFavoriteButton(oeuvreId, data.isFavorite);
            showNotification(data.message, 'success');
        } else {
            console.log(`‚ùå Erreur: ${data.message}`);
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('‚ùå Erreur r√©seau:', error);
        showNotification('Erreur lors de la modification des favoris', 'error');
    });
}

function updateFavoriteButton(oeuvreId, isFavorite) {
    console.log(`üîÑ Mise √† jour du bouton favori pour l'≈ìuvre ${oeuvreId}, isFavorite: ${isFavorite}`);
    
    const button = document.querySelector(`[data-oeuvre-id="${oeuvreId}"]`);
    const icon = document.getElementById(`favorite-icon-${oeuvreId}`);
    
    console.log('üîç Bouton trouv√©:', button);
    console.log('üîç Ic√¥ne trouv√©e:', icon);
    
    if (button && icon) {
        if (isFavorite) {
            button.classList.add('favorited');
            button.setAttribute('title', 'Retirer des favoris');
            icon.textContent = '‚ù§Ô∏è';
            console.log('‚úÖ C≈ìur mis en rouge (favori)');
        } else {
            button.classList.remove('favorited');
            button.setAttribute('title', 'Ajouter aux favoris');
            icon.textContent = 'ü§ç';
            console.log('‚úÖ C≈ìur mis en blanc (non favori)');
        }
    } else {
        console.error('‚ùå Bouton ou ic√¥ne non trouv√© pour l\'≈ìuvre', oeuvreId);
    }
}

function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg text-white z-50 transition-all duration-300 ${
        type === 'success' ? 'bg-green-500' : 'bg-red-500'
    }`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 3000);
}
</script>

{% endblock %} 