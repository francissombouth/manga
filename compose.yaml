
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: manga-backend
    ports:
      - "8082:8080"
    depends_on:
      - database
    environment:
      # UtilisÃ© uniquement en local avec Docker Compose
      - DATABASE_URL=postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=16&charset=utf8
      - MAILER_DSN=smtp://mailer:1025
    volumes:
      - ./var/logs:/var/www/html/var/log:rw
      - ./public/uploads:/var/www/html/public/uploads:rw
    restart: unless-stopped
    networks:
      - manga-network



###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: manga-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - manga-network
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  manga-network:
    driver: bridge
